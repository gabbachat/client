{"version":3,"sources":["_modules/base.styl","../../node_modules/axis/axis/typography.styl","_modules/typography.styl","_modules/forms.styl","../../node_modules/axis/axis/utilities.styl","_modules/content.styl","lib/flexbox.styl","chat/sidebar.styl","_modules/errors.styl","_modules/header.styl","_modules/footer.styl","chat/feed.styl","chat/input.styl","chat/chat.styl"],"names":[],"mappings":"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","file":"styles.css","sourceRoot":"/source/","sourcesContent":["*\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  text-selection($color-primary, $color-primary-text);\n  box-sizing:border-box;\n  outline: 0;\n  &:focus\n    outline: 0;\n\nhtml\n  min-height: 100%;\n  background-color: $color-page-bg;\n\nbody\n  background-color: $color-page-bg;\n  font-family: $font-stack;\n  color: $color-font;\n  font-weight: 300;\n  font-size: 13px;\n  margin: 0;\n","// ----------\n// Typography\n// ----------\n\n// Alias: Bold\n// It's just faster to type bold() than font-weight: bold\n\nbold()\n  font-weight: bold\n\n// Alias: Italic\n// It's just faster to type italic() than font-style: italic\n\nitalic()\n  font-style: italic\n\n// Alias: Normal\n// Put the font-weight and style back to normal\n\nnormal()\n  font-weight: normal\n  font-style: normal\n\n// Mixin: Raquo\n//\n// Because technically raquo is not semantic, it's better to add it like this.\n//\n// ex. raquo()\n\nraquo()\n  &:after\n    content: \" \\00BB\"\n\n// Mixin: Font Face\n//\n// Super simple font-face declaration. Just give the name and the folder it\n// lives in. Make sure the font name matches the name of the files. Uses the\n// fontspring syntax:\n// http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax\n//\n// ex. font-face(proxima-nova, '/fonts')\n\nfont-face($name, $folder, $weight = 'normal', $style = 'normal')\n  @font-face\n    font-family: $name\n    src: url($folder unquote('/') $name unquote('.eot') '?#iefix') format('embedded-opentype'), url($folder unquote('/') $name unquote('.woff')) format('woff'), url($folder unquote('/') $name unquote('.ttf')) format('truetype'), url($folder unquote('/') $name unquote('.eot') unquote('#') $name) format('svg');\n    font-weight: unquote($weight)\n    font-style: unquote($style)\n\n\n// Mixin: Ellipsis\n// Truncate text to the width of its container...\n// ex: ellipsis()\n// ex: ellipsis: 300px\n\nellipsis($width = 100%)\n  white-space: nowrap\n  display: inline-block\n  max-width: $width\n  overflow: hidden\n  text-overflow: ellipsis\n  word-wrap: normal\n\n// Function: Line Height\n//\n// If there is a font-size set on the parent element, adjusts the line height to\n// match that. If not, it uses the base font-size to calculate the line-height.\n\n-line-height()\n  if @font-size\n    line-height: 1.6em\n  else\n    line-height: unit($font-size*1.6, 'px')\n    line-height: 1.6rem\n\n// Mixin: Text Margin\n//\n// Puts nice visually pleasing top and bottom margins on a paragraph of text.\n// Put a font-size on your element to have it adjust accordingly.\n//\n// ex. p\n//       font-size: 18px\n//       text-margin()\n\ntext-margin($size = $font-size)\n  if @font-size\n    margin: .75em 0\n  else\n    margin: unit($font-size*.75, 'px') 0\n\n// Mixin: Paragraph\n//\n// Sets a nice size, line-height, and margins on a paragraph of text. Pass a\n// size in to customize. Toggle margins off if you don't want them.\n//\n// ex. p()\n// ex. p: 18px\n// ex. p: 14px false\n\np($size = 1rem, $margins = true)\n  font-size: $size\n  text-margin() if $margins\n  -line-height()\n  open-type-ligatures() if $ligatures\n\n// Alias: paragraph\nparagraph = p\n\n// Alias: Font Size\n// An alias for 'font-size' with auto-fallback for rem.\n// ex. fs: 16px\n// ex. fs: 1.2rem\n\nfs($size)\n  if (unit($size) == 'rem')\n    font-size: round(unit(($font-size*$size), 'px'))\n    font-size: $size\n  else\n    font-size: $size\n\n// Alias: Uppercase\n// An alias for 'text-transform: uppercase'\n// ex. uppercase()\n\nuppercase()\n  text-transform: uppercase\n\n// Alias: Upcase\nupcase = uppercase\n\n// Alias: Lowercase\n// An alias for 'text-transform: lowercase'\n// ex. lowercase()\n\nlowercase()\n  text-transform: lowercase\n\n// Alias: Downcase\ndowncase = lowercase\n\n// Alias: Reset Case\n// Gets rid of an text transform\n// ex. reset-case()\n\nreset-case()\n  text-transform: none\n\n// Mixin: Small\n//\n// Makes your text smaller and a little lighter. Great on <small /> tags.\n//\n// ex. small()\n\nsmall()\n  font-size: 55%\n  opacity: .6\n  font-weight: normal\n\n// Function: Heading\n// For internal use within headings\n\n-heading($multiplier, $margins = true)\n  font-size: unit(($font-size*$multiplier), 'px')\n  font-size: unit($multiplier, 'rem')\n  text-rendering: optimizelegibility\n  font-weight: bold\n  text-margin() if $margins\n  -line-height()\n  openTypeLigatures() if $ligatures\n\n// Mixin Set: h1, h2, h3, h4, h5, h6\n//\n// These provide nice defaults for headings based off the default font size.\n// The can scale infinitely, and work best when matched to their corresponding\n// html elements. If you'd like to change the base size of a header, just pass\n// it as an option.\n//\n// ex. h3()\n// ex. h3: 3.5\n\nh1($size=2.4)\n  -heading($size)\n\nh2($size=1.8)\n  -heading($size)\n\nh3($size=1.5)\n  -heading($size)\n\nh4($size=1.3)\n  -heading($size)\n\nh5($size=1.0)\n  -heading($size)\n\nh6($size=0.9)\n  -heading($size)\n  upcase()\n\n// Mixin: Link\n//\n// A nice default style for links. Accepts a color and a style. Color can be\n// anything, style can be underline, darken, lighten, or glow, each giving it a\n// different style of interaction when hovered. More suggestions here welcome.\n//\n// ex. link()\n// ex. link: green\n// ex. link: #57777E 'glow'\n\nlink($color = $blue, $style = 'underline')\n  color: $color\n  text-decoration: none\n  transition()\n\n  if $style == 'underline'\n    hover-underline()\n    &:hover\n      color: darken(@color, 15%)\n  else if $style == 'darken'\n    &:hover\n      color: darken(@color, 20%)\n  else if $style == 'lighten'\n    hover-lighten()\n  else if $style == 'glow'\n    &:hover\n      text-shadow: 0 0 7px rgba(@color, .6)\n\n  &:visited\n    opacity: .8\n\n// Mixin: Reset Link\n//\n// Sometimes my link mixin of the browser defaults will give you questionable\n// link defaults that you don't want on certain elements. This guy gets rid of\n// that.\n\n// ex. reset-link()\n\nreset-link()\n  border: none\n  text-decoration: none\n  color: initial\n\n  &:hover\n    border: none\n    text-decoration: none\n    color: initial\n\n  &:visited\n    opacity: 1\n\n// Mixin: Text Selection\n//\n// This guy sets the text select color intelligently based on the\n// highlight-color variable found in the settings file. If you really want, you\n// can pass it a color override too.\n\n// ex. text-selection()\n\ntext-selection($color = $highlight-color, $text-color = null)\n\n  $text-color = (light($color) ? white : #494949) unless $text-color\n\n  &::-moz-selection\n    background: $color\n    color: $text-color\n\n  &::selection\n    background: $color\n    color: $text-color\n\n// Mixin: Ul\n//\n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to disc. Use this on a ul element por favor.\n//\n// ex. ul()\n// ex. ul: 'square'\n\nul($style = 'disc')\n  margin: 5px 15px\n  margin: 0.32rem 0.94rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote($style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Ol\n//\n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to decimal. Use this on a ol element por favor.\n//\n// ex. ol()\n// ex. ol: 'upper-roman'\n\nol($style = 'decimal')\n  margin: 5px 18px\n  margin: 0.32rem 1.125rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote($style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Inline List\n//\n// For when you need your list to be horizontal. Pass it the spacing you want\n// between list elements, whatever units you'd like. Defaults to 20px.\n//\n// ex. inline-list()\n// ex. inline-list: 15px\n\ninline-list($spacing = 20px)\n  group()\n  margin: 0\n  padding: 0\n\n  li\n    float: left\n    margin-right: $spacing\n    list-style-type: none\n\n  li:last-child\n    margin-right: 0\n\n// Mixin: Reset List\n//\n// If you're tired of all the list shenanigans and want to get rid of them for\n// this special list you're working on, this is your guy. Resets the margins,\n// padding, and style.\n//\n// ex. reset-list()\n\nreset-list()\n  margin: 0\n  padding: 0\n\n  li\n    float: none\n    list-style-type: none\n    padding: 0\n    margin: 0\n\n// Mixin: Blockquote\n//\n// Nice styles for a blockquote, and even puts a nice hyphen in before your\n// citation. Use with a <p> and <cite>, <footer>, or <figcaption> inside for\n// best results. Pass a color or 'none' to set the left border.\n//\n// ex. blockquote()\n\nblockquote($color = $blue)\n  border-left: 4px solid $color\n  margin: 1em 0\n  padding-left: 1.5em\n  group()\n\n  > p\n    font-weight: 300\n    font-size: 127%\n    font-size: 1.27rem\n    line-height: 127%\n    line-height: 1.27rem\n    margin-top: 0\n\n  > cite, > footer, > figcaption\n    color: #888888\n    &:before\n      content: '\\2014'\n\n// Alias: blockquo\nblockquo = blockquote\n\n// Hyphenation\n//\n// Hyphenation is the better word-break. It’s locale aware, and inserts the\n// hyphen character at the correct place, when breaking the words. This is\n// especially important in responsive designs. It will save you from a lot of\n// ragged lines. And, no need anymore for clunky & slow Javascript hyphenation\n// fallbacks. Taken from http://www.newnet-soft.com/blog/csstypography\n//\n// ex. hyphenation()\n\nhyphenation()\n    -ms-word-break: break-all\n    word-break:     break-all\n    word-break:     break-word // webkit\n    hyphens: auto // none, auto, <number>\n    -webkit-hyphenate-before: 2\n    -webkit-hyphenate-after:  3\n    hyphenate-lines:          3\n\n// Mixin: Shadow Stroke\n//\n// Creates a text outline using text-shadow. Ported from nib.\n// Takes a color.\n//\n// ex: shadow-stroke()\n// ex: sahdow-stroke(red)\n\nshadow-stroke($color = $blue)\n  text-shadow: -1px -1px 0 $color, 1px -1px 0 $color, -1px 1px 0 $color, 1px 1px 0 $color\n\n// Additive Mixin: Base\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// This is an essential mixin. You want this on your page. Sets your font stack,\n// size, and colors based on the settings file and makes sure that your text is\n// a great looking as possible. You can override any of the params, but there is\n// really no reason to.\n//\n// ex. base()\n\nbase($fonts = $font-stack, $size = $font-size, $color = $font-color)\n  html\n    font-size: unit($size, 'px')\n    font-size: unit(($size/16)*100, \"%\")\n\n  body\n    font-family: $fonts\n    color: $color\n    -webkit-font-smoothing: antialiased\n    -webkit-text-size-adjust: 100%\n    -ms-text-size-adjust: 100%\n    font-size-adjust: auto\n\n// Additive Mixin: Headers\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' wonderful scaling header styles to your <hx> tags.\n//\n// ex. headers()\n\nheaders()\n  h1\n    h1()\n\n  h2\n    h2()\n\n  h3\n    h3()\n\n  h4\n    h4()\n\n  h5\n    h5()\n\n  h6\n    h6()\n\n// Additive Mixin: Lists\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' styles to ul and ols.\n//\n// ex. lists()\n\nlists()\n  ul\n    ul()\n  ol\n    ol()\n\n// Additive Mixin: Bold-Italic\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds bold and italic styles to the right tags if you did a global reset.\n//\n// ex. bold-italic()\n\nbold-italic()\n  b\n    bold()\n  i\n    italic()\n  strong\n    bold()\n  em\n    italic()\n\n// Additive Mixin: Typography\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' styles to bold and italic elements, headers, paragrapgs, small\n// text, links, lists, and blockquotes. Got all your basic elements covered.\n//\n// ex. typography()\n\ntypography()\n  bold-italic()\n  headers()\n  lists()\n  text-selection()\n\n  p\n    paragraph()\n\n  small\n    small()\n\n  a[href]:not([class])\n    link()\n\n  blockquote\n    blockquo()\n\n  .hyphenation\n    hyphenation()\n","h1, h2, h3, h4, h5, h6\n  font-weight: 300;\n  margin: 5px 0;\n  padding: 0;\n  line-height: initial;\n\nh1\n  font-size: 40px;\n  font-weight: 100;\n\nh2\n  font-size: 33px;\n\nh3\n  font-size: 22px;\n\nh5, h6\n  margin: 3px 0;\n\na\n  color: $color-link\n  text-decoration: none;\n  transform: 0.5s color;\n\n  &:hover\n    color: $color-link-hover\n",".input-group\n  display: block;\n  margin: 10px 0;\n\n  label\n    display: block;\n    margin-bottom: 5px;\n\n  input\n    padding: 7px 3px;\n    border: 0;\n    border-bottom: solid 1px $border-color;\n    color: $grey;\n    font-size: 13px;\n    transition: 0.5s border;\n\n    &:focus\n      border-color: $color-primary;\n      color: $black;\n\n      &::-webkit-input-placeholder\n        color: lighten($color-primary, 20);\n        font-weight: 300;\n\n    &::-webkit-input-placeholder\n      color: $grey-light;\n      font-weight: 300;\n\n\n// BUTTONS\nbutton\n  background-color: $color-primary;\n  border: none;\n  color: $color-primary-text;\n  font-size: 13px;\n  padding: 10px 20px;\n  transition: 0.5s background;\n\n  &:hover\n    background-color: $color-primary-highlight;\n    cursor: pointer;\n","// ---------\n// Utilities\n// ---------\n\n// Alias: No Select\n// You can't highlight this.\n\nno-select()\n  -webkit-touch-callout: none\n  user-select: none\n\n// Alias: B\n// Border, but quicker and with an intelligent default.\n\nb()\n  arguments = unquote('1px solid') unless arguments\n  border: arguments\n\n// Alias: Transition\n//\n// Transition with an intelligent default.\n//\n// ex. transition()\n// ex. transition: color 1s ease\n// ex. transition(color 1s ease, background 2.4s linear)\n\ntransition()\n  arguments = unquote('all .3s ease') unless arguments\n  transition: arguments\n\n// Alias: Border Box\n// A quicker way to specify border-box sizing.\n\nborder-box()\n  box-sizing: border-box\n\n// Alias: Opentype ligatures\n//\n// The vast majority of fonts contain lowercase and uppercase alphabets,\n// numerals, punctuation and accents. Many professionally-designed fonts\n// also contain ligatures, alternative characters, smallcaps, different kinds of\n// numbers, and sometimes much more besides. This enables it.\n//\n// Source: http://www.newnet-soft.com/blog/csstypography\n// Additional: http://blog.fontdeck.com/post/15777165734/opentype-1\n\nopen-type-ligatures()\n  font-feature-settings: \"liga\", \"dlig\"\n\n// Mixin: Rounded\n//\n// Unless you are working with a ridiculously large element, this will round the\n// corners as much as css will allow. Even in IE.\n//\n// ex. rounded()\n\nrounded()\n  border-radius: 999px\n\n// Mixin: Triangle\n//\n// One of my favorites. Makes a little css triangle for you. Pass it a direction\n// (up, down, left, right), size (in pixels), and a color.\n//\n// ex. triangle()\n// ex. triangle: 'down' 15px blue\n\ntriangle($direction = 'up', $size = 10px, $color = #000)\n  width: 0\n  height: 0\n  if $direction == 'up'\n    border-left: $size solid transparent\n    border-right: $size solid transparent\n    border-bottom: $size solid $color\n  else if $direction == 'down'\n    border-left: $size solid transparent\n    border-right: $size solid transparent\n    border-top: $size solid $color\n  else if $direction == 'left'\n    border-top: $size solid transparent\n    border-bottom: $size solid transparent\n    border-right: $size solid $color\n  else if $direction == 'right'\n    border-top: $size solid transparent\n    border-bottom: $size solid transparent\n    border-left: $size solid $color\n\n// Mixin: Debug\n//\n// Debugging tool - adds a border to the current element, its children,\n// grandchildren, etc so you can see what's up – great for precise layout\n// tweaks.  It will also add flags if you made mistakes like put in inline\n// styles, forgot an alt on an image, left the alt blank, etc. Not to be used\n// in production, obviously.\n//\n// via dbox: http://codepen.io/dbox/pen/GJZzYo?editors=110\n\ndebug()\n  border 1px solid MediumPurple\n  > *\n    border 1px solid DarkKhaki\n  > * > *\n    border 1px solid MediumTurquoise\n  > * > * > *\n    border 1px solid LightSlateGray\n  > * > * > * > *\n    border 1px solid LightBlue\n  > * > * > * > * > *\n    border 1px solid MediumSlateBlue\n  > * > * > * > * > * > *\n    border 1px solid DeepSkyBlue\n  > * > * > * > * > * > * > *\n    border 1px solid DarkSeaGreen\n\n  img\n    border: 1px solid #f00\n    -webkit-filter: hue-rotate(330deg) contrast(.75) saturate(6)\n    filter: hue-rotate(330deg) contrast(.75) saturate(6)\n\n  img[alt]\n    border: 1px solid LimeGreen\n    -webkit-filter: none\n    filter: none\n\n  img[alt=\"\"]\n    border: 1px solid gold\n    -webkit-filter: contrast(1) saturate(2)\n    filter: contrast(1) saturate(2)\n\n  a\n    background: rgba(#f00, .1)\n    border: 1px solid #f00\n\n  a[title]\n    background: none\n    border-color: LimeGreen\n\n  style\n    border: block\n\n  [style], style, [class=\"\"], [id=\"\"], a[href=\"#\"]\n    background: rgba(yellow, .2)\n    border: 1px solid gold\n\n// Block Mixin: Quantity Queries\n//\n// Set rules for a selector based on a specific sibling count.\n// via: https://github.com/pascalduez/postcss-quantity-queries\n//\n// ex. +quantity-at-least(6)\n// ex. +quantity-at-most(12, div)\n// ex. +quantity-between(0, 8, span)\n// ex. +quantity-exactly(5)\n\nquantity-at-least($count = 4, $selector = li)\n  & > {$selector}:nth-last-child(n+{$count})\n  & > {$selector}:nth-last-child(n+{$count}) ~ {$selector}\n    {block}\n\nquantity-at-most($count = 4, $selector = li)\n  & > {$selector}:nth-last-child(-n+{$count}):first-child\n  & > {$selector}:nth-last-child(-n+{$count}):first-child ~ {$selector}\n    {block}\n\nquantity-between($start = 0, $end = 10, $selector = li)\n  & > {$selector}:nth-last-child(n+{$start}):nth-last-child(-n+{$end}):first-child\n  & > {$selector}:nth-last-child(n+{$start}):nth-last-child(-n+{$end}):first-child ~ {$selector}\n    {block}\n\nquantity-exactly($count = 4, $selector = li)\n  & > {$selector}:nth-last-child({$count}):first-child\n  & > {$selector}:nth-last-child({$count}):first-child ~ {$selector}\n    {block}\n\n// Function: Rem Calculator\n//\n// Calculates and returns the rem value based on px input. Default base font\n// size is 16px, but can be changed with base-font-size.\n//\n// ex       : rem(30px) or rem(30)\n// returns  : 1.875rem\n\nrem($value)\n  $base-font-size ?= 16px\n  $type = unit($value)\n  if $type == px\n    return unit($value / $base-font-size, 'rem')\n  else\n    return unit($value, $type)\n\n// Custom animation timing functions, ported from bourbon\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_timing-functions.scss\n\n// ease-in\n$ease-in-quad =      cubic-bezier(0.550,  0.085, 0.680, 0.530)\n$ease-in-cubic =     cubic-bezier(0.550,  0.055, 0.675, 0.190)\n$ease-in-quart =     cubic-bezier(0.895,  0.030, 0.685, 0.220)\n$ease-in-quint =     cubic-bezier(0.755,  0.050, 0.855, 0.060)\n$ease-in-sine =      cubic-bezier(0.470,  0.000, 0.745, 0.715)\n$ease-in-expo =      cubic-bezier(0.950,  0.050, 0.795, 0.035)\n$ease-in-circ =      cubic-bezier(0.600,  0.040, 0.980, 0.335)\n$ease-in-back =      cubic-bezier(0.600, -0.280, 0.735, 0.045)\n$ease-in-swift =     cubic-bezier(0.900,  0.000, 0.450, 1.000)\n\n// ease-out\n$ease-out-quad =     cubic-bezier(0.250,  0.460, 0.450, 0.940)\n$ease-out-cubic =    cubic-bezier(0.215,  0.610, 0.355, 1.000)\n$ease-out-quart =    cubic-bezier(0.165,  0.840, 0.440, 1.000)\n$ease-out-quint =    cubic-bezier(0.230,  1.000, 0.320, 1.000)\n$ease-out-sine =     cubic-bezier(0.390,  0.575, 0.565, 1.000)\n$ease-out-expo =     cubic-bezier(0.190,  1.000, 0.220, 1.000)\n$ease-out-circ =     cubic-bezier(0.075,  0.820, 0.165, 1.000)\n$ease-out-back =     cubic-bezier(0.175,  0.885, 0.320, 1.275)\n$ease-out-swift =    cubic-bezier(0.550,  0.000, 0.100, 1.000)\n\n// ease-in-out\n$ease-in-out-quad =  cubic-bezier(0.455,  0.030, 0.515, 0.955)\n$ease-in-out-cubic = cubic-bezier(0.645,  0.045, 0.355, 1.000)\n$ease-in-out-quart = cubic-bezier(0.770,  0.000, 0.175, 1.000)\n$ease-in-out-quint = cubic-bezier(0.860,  0.000, 0.070, 1.000)\n$ease-in-out-sine =  cubic-bezier(0.445,  0.050, 0.550, 0.950)\n$ease-in-out-expo =  cubic-bezier(1.000,  0.000, 0.000, 1.000)\n$ease-in-out-circ =  cubic-bezier(0.785,  0.135, 0.150, 0.860)\n$ease-in-out-back =  cubic-bezier(0.680, -0.550, 0.265, 1.550)\n$ease-in-out-swift = cubic-bezier(0.900,  0.000, 0.100, 1.000)\n","body\n  display: flex;\n  min-height: 100vh;\n  flex-direction: row;\n\n.content\n  padding: 5%;\n\n.gabba-content\n  display: flex;\n  flex: 1;\n\n// BUTTONS\n.mdl-button--raised.mdl-button--colored\n  background-color: $blue;\n  &:hover\n    background-color: $blue-highlight;\n\n// UTILITY\n.pad-right\n  padding-right: 20px;\n\n.pad-left\n  padding-left: 20px;\n\n// STATUS\n.error-container\n  background: $bad;\n  // opacity: 0.8;\n  color: $bad-text;\n  display: block;\n  font-size: 15px;\n  // font-weight: 500;\n  padding: 10px;\n  position: relative;\n  text-align: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  // margin: 0 0 5px 0;\n","flexbox(value)\n  if value == inline-flex\n    display -webkit-inline-flex\n    display -ms-inline-flexbox\n    display inline-flex\n  else if value == flex\n    display -webkit-flex\n    display -ms-flexbox\n    display flex\n\nflex(value)\n  -webkit-flex value\n  -ms-flex value\n  flex value\n\nflex-basis(value)\n  -webkit-flex-basis value\n  -ms-flex-basis value\n  flex-basis value\n\nflex-grow(value)\n  -webkit-flex-grow value\n  -ms-flex-grow value\n  flex-grow value\n\nflex-shrink(value)\n  -webkit-flex-shrink value\n  -ms-flex-shrink value\n  flex-shrink value\n\nflex-direction(value)\n  -webkit-flex-direction value\n  -ms-flex-direction value\n  flex-direction value\n\nflex-wrap(value)\n  -webkit-flex-wrap value\n  -ms-flex-wrap value\n  flex-wrap value\n\nflex-flow(value...)\n  -webkit-flex-flow value\n  -ms-flex-flow value\n  flex-flow value\n\njustify-content(value)\n  if value == start || value == end\n    -webkit-justify-content flex-+value\n    -ms-flex-pack value\n    justify-content flex-+value\n  else if value == center\n    -webkit-justify-content value\n    -ms-flex-pack value\n    justify-content value\n  else if value == space-between\n    -webkit-justify-content value\n    -ms-flex-pack justify\n    justify-content value\n  else if value == space-around\n    -webkit-justify-content value\n    -ms-flex-pack distribute\n    justify-content value\n\nalign-content(value)\n  if value == space-around\n    -webkit-align-content value\n    -ms-flex-line-pack distribute\n    align-content value\n  else if value == space-between\n    -webkit-align-content value\n    -ms-flex-line-pack justify\n    align-content value\n  else if value == end or value == start\n    -webkit-align-content flex-+value\n    -ms-flex-line-pack value\n    align-content flex-+value\n  else\n    -webkit-align-content value\n    -ms-flex-line-pack value\n    align-content value\n\nalign-items(value)\n  if value == start or value == end\n    -webkit-align-items flex-+value\n    -ms-flex-align value\n    align-items flex-+value\n  else\n    -webkit-align-items value\n    -ms-flex-align value\n    align-items value\n\nalign-self(value)\n  if value == start or value == end\n    -webkit-align-self flex-+value\n    -ms-flex-item-align value\n    align-self flex-+value\n  else\n    -webkit-align-self value\n    -ms-flex-item-align value\n    align-self value\n\norder(value)\n  -ms-flex-order value\n  -webkit-order value\n  order value\n","gabba-sidebar\n  background: $color-sidebar-bg;\n  color: $color-primary-text;\n  min-width: 200px;\n  padding: 10px;\n",".error\n  @extend .content\n\n  .highlight\n    color: $bad;\n","header.main\n  background: $black;\n  color: $white;\n  height: 110px;\n  padding: 20px;\n\n  .left\n    position: relative;\n    top: 15px;\n    .logo\n      float: left;\n      max-height: 40px;\n      margin-top: -25px;\n      padding-right: 20px;\n\n    .condition-label\n      display: inline-block;\n      float: left;\n      height: 40px;\n      margin-top: -32px;\n      padding-right: 20px;\n      text-align: center;\n      .condition\n        display: block;\n        font-size: 17px;\n        text-transform: uppercase;\n        padding: 0px 10px;\n        color: #d3d7d8;\n      .support\n        border-top: solid 1px #d3d7d8;\n        display: block;\n        font-weight: 500;\n        font-size: 15px;\n        padding: 5px 15px 5px 15px;\n        margin-top: 5px;\n\n    nav.main\n      margin-top: 40px;\n      .nav-item\n        color: $color-primary-text;\n        padding: 10px;\n        text-transform: capitalize;\n        transition: 0.5s opacity;\n        &:hover\n          opacity: 0.6;\n\n  .right\n    position: absolute;\n    top: 0px;\n    right: 10px;\n\n    .logout, .settings\n      background: rgba(0,0,0,0.8);\n      display: inline-block;\n      padding: 10px 20px;\n      margin: 0 1px;\n\n    .status\n      color: $grey-light;\n      margin: 8px 15px;\n\n\n    // nav.secondary\n","footer.mdl-mega-footer\n  background-color: $black;\n\n  // &__heading, &--heading\n\n\n\n\n.mdl-mega-footer--heading, .mdl-mega-footer__heading\n  color: #959494;\n  margin-bottom: 10px;\n  text-transform: uppercase;\n\n.mdl-mega-footer--link-list a, .mdl-mega-footer__link-list a\n  color: $white;\n  line-height: 150%;\n  // font-weight: 500;\n\n.mdl-mega-footer__middle-section\n  ul.mdl-mega-footer__link-list\n    li\n      display: inline-block;\n      margin-right: 10px;\n\n.mdl-mega-footer__bottom-section\n  border-bottom: 1px solid rgba(255,255,255, 0.1);\n  border-top: 1px solid rgba(255,255,255, 0.1);\n  padding: 20px 0;\n\n  .logo\n    display: inline-block;\n    height: 40px;\n    margin-right: 20px;\n\n  .copyright\n    color: #959494;\n","gabba-feed\n  background: #333\n  flex: auto;\n\n  main\n    display: flex;\n    min-height: 100vh;\n    flex-direction: column;\n\n    @import \"chat/input\"\n    @import \"chat/chat\"\n","gabba-input\n  background: $color-input-bg;\n  margin-bottom: auto;\n  min-height: 60px;\n\n  input\n    padding: 7px 3px;\n    border-radius: 0;\n    box-shadow: none;\n    border: 0;\n    border-top: solid 1px $border-color;\n    color: $grey;\n    min-height: 60px;\n    width: 100%;\n    font-size: 13px;\n    padding-left: 10px;\n    transition: 0.5s border;\n\n    &:focus\n      box-shadow: none;\n      border: 0;\n      border-top: solid 1px $color-primary;\n      color: $black;\n      outline: none;\n\n      &::-webkit-input-placeholder\n        color: lighten($color-primary, 20);\n        font-weight: 300;\n\n    &::-webkit-input-placeholder\n      color: $grey-light;\n      font-weight: 300;\n","gabba-chat\n  background: $color-chat-bg;\n  flex: auto;\n  margin-top: auto;\n  padding: 10px;\n"]}